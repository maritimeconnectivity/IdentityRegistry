{
  "id" : "MCP",
  "realm" : "MCP",
  "displayName" : "MCP Broker",
  "notBefore" : 1476102810,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "none",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "0a3dbb1e-e3c3-42df-b360-a85333190c86",
      "name" : "default-roles-mcp",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "MCP",
      "attributes" : { }
    }, {
      "id" : "27293cec-b9e2-4391-aa28-a145cb89102f",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "MCP",
      "attributes" : { }
    }, {
      "id" : "bfa03daf-d093-4e94-9aee-c2841bbb3f3a",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "MCP",
      "attributes" : { }
    } ],
    "client" : {
      "mcpidreg" : [ ],
      "realm-management" : [ {
        "id" : "25504c0c-f8d2-4c8b-adb5-c505e32bdae6",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "5d26a109-e689-4787-bebf-ba7646c649e2",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "f79357f3-7ef7-4250-95cf-d48436001ba1",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "23acad14-a619-4bcd-bfd8-72d420ce41cf",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "952e52a4-edcc-41e7-91ab-b0352349fa5f",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "553d01af-be77-4eb1-b990-ed147d70f320",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "721133d4-558c-4a25-b602-b8627cb611fc",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "e2fc5fdb-6b3c-4b0b-a078-81fba53c140d",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "3e427242-055f-4a86-972f-84dda74d6679",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "2e149817-9fe9-4bb4-a712-26715ece7e4c",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "d9cb9824-1dca-4301-9fc1-686c40fa63d4",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "dc11dab4-c107-49f4-b2d1-bbc4423536de",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "a83be729-df17-457b-861f-efe213bc4c76",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "09608531-c1dd-4b28-93e2-d43aad8cbb26",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "8e00742c-d8c6-4733-89ef-72b7670966df",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "d61bc505-0fe6-403e-8a00-6ea0ae618ac3",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "246dd666-112b-4944-9554-57dae3f11c0c",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "manage-clients", "view-events", "view-authorization", "manage-identity-providers", "view-identity-providers", "manage-authorization", "view-realm", "manage-realm", "create-client", "view-users", "query-users", "query-realms", "manage-users", "impersonation", "manage-events", "query-clients", "view-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "ee8268bc-8434-4af2-a335-bad58ba213cc",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      }, {
        "id" : "0b3b56f7-0dda-48a6-ad2f-cfd6264af81f",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
        "attributes" : { }
      } ],
      "MCP-Portal" : [ ],
      "security-admin-console" : [ ],
      "setupclient" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "fbb14b22-7311-48de-995d-8beb18f523f0",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "98562b52-90b4-4ed1-8571-c59f5db95432",
        "attributes" : { }
      } ],
      "cert2oidc" : [ ],
      "account" : [ {
        "id" : "2cfbe856-6f95-46b1-9a7e-57fdc9274753",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      }, {
        "id" : "abe0a9cc-8678-4bcc-b198-64ab9bbb412d",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      }, {
        "id" : "541677d7-961e-4a9e-bf53-6469013c00a7",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      }, {
        "id" : "1aaa61a0-a607-4a1a-b3b9-edd6be4d4eb5",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      }, {
        "id" : "4bc7833f-4333-4194-b950-2be452bef8fd",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      }, {
        "id" : "3c5c5136-6644-4e3f-8123-8aaa3d3df38b",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "812ead94-18c1-489c-b786-33608ed03e70",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "0a3dbb1e-e3c3-42df-b360-a85333190c86",
    "name" : "default-roles-mcp",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "MCP"
  },
  "requiredCredentials" : [ "password" ],
  "passwordPolicy" : "hashIterations(20000)",
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "30a9f13d-a993-4032-9b70-e949348df2cd",
    "createdTimestamp" : 1457608501158,
    "username" : "idreg-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "861d5915-1f7a-4bee-be2a-a3c69d62f1e6",
      "type" : "password",
      "createdDate" : 1590154129138,
      "secretData" : "{\"value\":\"XLM4olXaEz8/lNP1aLGhLDI8FqaZfxAjrYPvZ7gYEVd6kLtbj5oZotVGeYlZuiAZBpw8swtgxIsuQj/7D1q8Sg==\",\"salt\":\"bmg797r12xNryJAhgpNcAg==\"}",
      "credentialData" : "{\"hashIterations\":20000,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "offline_access" ],
    "clientRoles" : {
      "realm-management" : [ "manage-clients", "manage-users", "manage-identity-providers", "view-identity-providers", "create-client", "view-clients", "view-users" ],
      "account" : [ "view-profile", "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "89967e04-ccf2-431f-84f9-fbae66df8d44",
    "createdTimestamp" : 1590153365966,
    "username" : "urn:mrn:mcp:user:idp1:bootstrap:mcp-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "Admin",
    "lastName" : "Adminson",
    "email" : "mcp-admin@maritimeconnectivity.net",
    "attributes" : {
      "mrn" : [ "urn:mrn:mcp:user:idp1:bootstrap:mcp-admin" ],
      "org" : [ "urn:mrn:mcp:org:idp1:bootstrap" ],
      "permissions" : [ "MCPADMIN" ]
    },
    "credentials" : [ {
      "id" : "e69d9b7c-fcc7-40d8-a2f2-6bdfccbea598",
      "type" : "password",
      "createdDate" : 1590153447102,
      "secretData" : "{\"value\":\"bto7/Zb+lHzrJMgtcO/qImZ7JeudisBPmXbFtGZ1xvji02L4MutpRZBLo2N8n7uY/IgWYpI5T8Q/0aeqGgqTKw==\",\"salt\":\"BZevaCIYPoN5t1imcZsJfg==\"}",
      "credentialData" : "{\"hashIterations\":20000,\"algorithm\":\"pbkdf2-sha256\"}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "uma_authorization", "offline_access" ],
    "clientRoles" : {
      "account" : [ "view-profile" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "812ead94-18c1-489c-b786-33608ed03e70",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/MCP/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/realms/MCP/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "c91decf9-2a04-4282-ac63-37ad2b1d8e63",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    }, {
      "id" : "6467e9d3-64ea-4ac0-b655-e8feb3e7db86",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bacc7463-3b4a-4bd5-a0ed-59edc0baba30",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ed795029-54e4-45ad-a7a5-dde64e1427c0",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "73419e7a-0c3e-4c09-95c7-47ca1d30729a",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "5e8eeb3d-8830-41ec-a0e1-9be26e15cef8",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles" ],
    "optionalClientScopes" : [ "microprofile-jwt" ]
  }, {
    "id" : "35b880cf-f98d-4a35-a352-b6ac97559300",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/MCP/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "cf9da9ce-06cb-466b-a0af-1f5400c79951",
    "redirectUris" : [ "/realms/MCP/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "f6236c75-737c-4dbf-be93-ae4690b6c831",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3251e95c-4943-4be9-9d0c-339aafdb6a71",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "0d495c3d-ae29-426f-be34-560cc4a331a1",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "b815621b-e79c-45c2-afa9-19031fd17964",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "98aaebde-26ff-4f20-88d4-ce9f6c6f8c71",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b96a18ec-d036-4c7a-a91a-1c3b8c5429cc",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "004e31c7-f5cf-451c-9cd4-f624c806ba3b",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9f4f3f5e-0782-4d35-8e54-0afc5a19b782",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles" ],
    "optionalClientScopes" : [ "microprofile-jwt" ]
  }, {
    "id" : "98562b52-90b4-4ed1-8571-c59f5db95432",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "32462bd6-955b-493e-9116-6257472b2771",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "06be12d7-4bbf-4ef0-ab64-77f5215e586c",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7d3e1996-e20f-48f1-bb52-fb7edf3f23c3",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    }, {
      "id" : "0bfccf7f-4729-47cb-ad6d-5d5352ce7126",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "40ed8fb0-631c-4920-824b-4a9290270521",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "9d5c3753-f915-4d66-b5af-1d9c90d406f9",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles" ],
    "optionalClientScopes" : [ "microprofile-jwt" ]
  }, {
    "id" : "6826c662-6b68-423a-a248-71bd3e69dab0",
    "clientId" : "cert2oidc",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "http://localhost:9*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "saml.authnstatement" : "false",
      "saml.server.signature" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "2a6ea04e-9978-4aaa-aac4-b928383f5275",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a9959276-68b2-49ef-aa61-efa6de35c9dd",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9ade2053-1118-4e68-9bca-906265ae2645",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b9de19c1-e614-4c33-9515-a1ffdc80d63e",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "3b572bc5-dccd-45b4-8734-0c604df59dc5",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "51d7aeb6-63ce-4f60-815c-b247df50ea39",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "mcp-client-template", "roles" ],
    "optionalClientScopes" : [ "microprofile-jwt" ]
  }, {
    "id" : "28c0f3a2-ef5a-4dc1-bd73-974cc8913786",
    "clientId" : "MCP-Portal",
    "name" : "MCP Portal",
    "rootUrl" : "https://management.maritimeconnectivity.net",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/app/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "saml.authnstatement" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "faf987ef-dc13-4cd8-aff0-0b4a8fbdbb56",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "mcp-client-template", "roles" ],
    "optionalClientScopes" : [ "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3b5e5ae1-c93e-4935-85e7-9782224d33dd",
    "clientId" : "mcpidreg",
    "name" : "Maritime Connectivity Platform Identity Registry",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "saml.authnstatement" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "1f7322f4-d3e3-4119-bee0-d8e83c815d4f",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b312c344-37be-486e-b3a1-84830ed39cd0",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "15b8e749-ecbe-4554-b637-0dfebbf27898",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "25fbc45d-c44e-458e-8df7-bdff9ccd1d27",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a6b8424e-7ce4-47a4-a047-3f69dd967b0d",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3e9a52c0-1e5f-468a-a080-3048cabb39ee",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ],
    "defaultClientScopes" : [ "mcp-client-template" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "05393db8-aaea-45e5-84dc-0602d8d8300c",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "46c0ee69-895f-4441-a5aa-13d817b9085f",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "17aefbf1-a1db-4aa1-89f4-66943f7f893f",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "18a3bf79-279f-4c6c-94da-6cc215f4e390",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    }, {
      "id" : "9968c53d-1c70-46db-b942-6198e82c94c4",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d940399a-aa49-45a4-b1b9-9d429f1c0101",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f80a5a9f-c01e-49ae-87e5-651809f91cfb",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "8e947bca-ceef-45b4-b515-108eed4327e2",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/MCP/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "/admin/MCP/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "saml.authnstatement" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.server.signature" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "9311c21e-e68b-42ab-bb8d-e1902eeb1485",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "36f09442-ba3d-4906-b6e5-e4e1a819c5ca",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "e76b03de-aae9-49b6-87d3-fc618ad9159b",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "01e56b39-d61f-4ae6-a724-10dbbec93f29",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "71cb9a18-cf97-4cd7-a0f4-6a6fddb0b917",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c21eb13c-530f-4a91-8b42-5846a4b7c138",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ef805bfd-bde3-4eee-befa-7030885a83a0",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles" ],
    "optionalClientScopes" : [ "microprofile-jwt" ]
  }, {
    "id" : "071c1c24-85b9-4eab-952f-f5c609cfc4fc",
    "clientId" : "setupclient",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "http://localhost:8080/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "saml.authnstatement" : "false",
      "saml.server.signature" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "0db2d4f3-3cd9-49f5-a50f-baec0f59afbd",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "35616a38-8be5-4c2f-9b00-854e0a5c1908",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5aa88e17-6ad9-4826-acd6-1117dadbe17e",
      "name" : "permissions mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "permissions",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "permissions",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f00d4f26-b3f7-490f-bb83-e810eac8b9db",
      "name" : "org mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "org",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "org",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6dd2a1dc-f09a-40b5-bd6d-54742c633536",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    }, {
      "id" : "e742729d-8268-435f-ac1d-ee2e8e8470a6",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a0111e9c-d829-4043-b5fb-40f0c8e71797",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cf9abdbb-4d5b-44ca-9a38-e9bef9612d63",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "mcp-client-template", "roles" ],
    "optionalClientScopes" : [ "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "e74c7ba6-d9b7-42c8-9a70-a163c58dcaab",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "79ae7280-a6e2-48b6-afb4-f60414792614",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "5eb2196a-7691-4643-b84a-d135c6cf444a",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "18370f27-f489-42b2-9424-2fc84b6c3c68",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "f2355beb-3b61-4935-afb4-6b88bb9aecda",
    "name" : "mcp-client-template",
    "description" : "Client template with the standard MCP mappers",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "83df0171-f931-4205-bf04-affd5c9e99ed",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "6e168c2d-c646-49c4-9aed-89f7914911c5",
      "name" : "ship_mrn mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "ship_mrn",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "ship_mrn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "871c9176-b578-4535-9476-d4f434c5898e",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7ab3e267-4c1a-4a2f-ba21-ffdae6c650f1",
      "name" : "subsidiary_mrn mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "subsidiary_mrn",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "subsidiary_mrn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "31777da9-6284-4bc7-a0ed-51b14df106db",
      "name" : "registered_port mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "registered_port",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "registered_port",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f7b00e16-95c9-4d33-b00d-4028599d3156",
      "name" : "ais_type mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "ais_type",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "ais_type",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1197ac75-3689-4075-9246-811c667b7bfa",
      "name" : "uid mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "uid",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "uid",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "13ea045a-acce-49c4-a4d6-c66f13a50ab7",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "47e78048-a064-42f1-bed3-e933c790a522",
      "name" : "role mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "roles",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "29d77e7c-9bc8-4a5d-a602-2bb8362a7d19",
      "name" : "acting_on_behalf_of mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "actingOnBehalfOf",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "acting_on_behalf_of",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aa614cf2-740d-442b-9316-683b4a2ac6f1",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "42f87724-7ac9-4dc4-aeb0-43c17729dfb4",
      "name" : "permissions mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "permissions",
        "access.token.claim" : "true",
        "claim.name" : "permissions",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "127fd4cb-a34c-4a14-af4d-8c745a1693d7",
      "name" : "org mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "org",
        "access.token.claim" : "true",
        "claim.name" : "org",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6d9327f2-9f76-4c3c-a8d0-2916d98ac172",
      "name" : "mms_url mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "mms_url",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "mms_url",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c7697e35-0d6c-4866-894e-c89650e8c7ee",
      "name" : "flagstate mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "flagstate",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "flagstate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b22ea177-128a-4227-8cc7-529d93d59d10",
      "name" : "imo_number mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "imo_number",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "imo_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "763977dc-d9c4-4b15-9697-1f7a48772114",
      "name" : "callsign mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "callsign",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "callsign",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d91de822-7e8b-4b68-a2be-1c1537e1f865",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9d7e9198-97b1-4bb0-ba1d-db1783c28aaa",
      "name" : "mrn mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "false",
        "userinfo.token.claim" : "false",
        "user.attribute" : "mrn",
        "access.token.claim" : "true",
        "claim.name" : "mrn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "41f93a02-7151-4ea7-8f5d-0e464ebf0f0c",
      "name" : "url mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "url",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "url",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cbcefdcd-ab89-452b-a455-e309527f6316",
      "name" : "mmsi mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "false",
        "user.attribute" : "mmsi",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "mmsi",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "f829ceea-75c6-42da-a016-73e7537e4d8d",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "6a965798-5086-4f4d-96d1-87cfda24d9db",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "7b57546b-4098-41d3-bcba-4498f226989a",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "8f07aa41-99d9-4e61-93bb-4dc59f67b76f",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "b75223e8-28c3-4321-8ceb-6a3d89376dd3",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "ceceed80-5a69-4580-bb8d-f97727ee99a5",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "dacd2d5b-88e3-4bfc-9bd5-81aef4568945",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "dc44fbc5-a5a1-4f7f-8972-2e15a14a5d35",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3b752863-faab-4ac3-a09a-50ec9657b230",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "91452d76-2053-4f27-8e3e-fe1f812ac89b",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "80d46e36-286a-40d2-90f2-6b382c2d83e6",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ca33e259-d99b-46c1-ac36-aa180eb79310",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "02ca3700-1d8c-4c85-86b6-b8ffc10b42cb",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a37e2722-9bd8-4005-ad8a-3bfd5b039d73",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1eea5248-975b-46fb-bdb4-9cf89002f8d2",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "68c89947-f36d-4f0f-bd64-06dfc2e5691c",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dbb001e1-7a2a-48b3-a387-7a1ce592ce34",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c57f7b06-939b-4b87-b90a-d06456a91612",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4773a566-fb91-47a6-a618-c72ff0a2a0c6",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "95da4d6d-383b-47f1-bb12-65b96b807b94",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b75aabc2-cf2b-434b-9cf4-d3e73e64bbf8",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "67a69909-fa37-48e0-8e39-dcb4457fd702",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b341a0a7-301c-4cc1-be3c-62134a373c70",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1f4affb5-26da-47e2-b6e6-5558e1ac490d",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5b5647b2-78e4-4487-b1ce-3f318811f558",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3496d518-ee39-4498-8937-8a399de00f1c",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "402dd6cc-3083-46e8-8492-321f79edf0c9",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6dea0d18-ba8e-462f-9801-a981bc1d77c4",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "ac1040ca-25ec-46b3-a1ae-a253dce46543",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "a30f899e-9ebb-412d-85dc-904078aa8995",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "509623a2-4711-4a35-a003-8683048c38d2",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "email", "web-origins", "profile", "roles", "role_list" ],
  "defaultOptionalClientScopes" : [ "offline_access", "phone", "microprofile-jwt", "address" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "maritimecloud",
  "eventsEnabled" : false,
  "eventsListeners" : [ "mc-event-listener", "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "UPDATE_PASSWORD_ERROR", "LOGOUT", "REGISTER", "CLIENT_REGISTER", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "SEND_VERIFY_EMAIL", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "IDENTITY_PROVIDER_POST_LOGIN", "UPDATE_EMAIL", "REGISTER_ERROR", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ {
    "alias" : "Users",
    "displayName" : "",
    "internalId" : "1a8116be-246e-4dc0-96b3-2e7b881b7608",
    "providerId" : "keycloak-oidc",
    "enabled" : true,
    "updateProfileFirstLoginMode" : "on",
    "trustEmail" : false,
    "storeToken" : false,
    "addReadTokenRoleOnCreate" : false,
    "authenticateByDefault" : false,
    "linkOnly" : false,
    "firstBrokerLoginFlowAlias" : "Auto first broker login",
    "config" : {
      "userInfoUrl" : "http://localhost:8080/auth/realms/Users/protocol/openid-connect/userinfo",
      "validateSignature" : "true",
      "clientId" : "mcp-broker",
      "tokenUrl" : "http://localhost:8080/auth/realms/Users/protocol/openid-connect/token",
      "jwksUrl" : "http://localhost:8080/auth/realms/Users/protocol/openid-connect/certs",
      "issuer" : "http://localhost:8080/auth/realms/Users",
      "useJwksUrl" : "true",
      "authorizationUrl" : "http://localhost:8080/auth/realms/Users/protocol/openid-connect/auth",
      "clientAuthMethod" : "client_secret_post",
      "logoutUrl" : "http://localhost:8080/auth/realms/Users/protocol/openid-connect/logout",
      "syncMode" : "LEGACY",
      "clientSecret" : "fb62bcc9-e105-480b-95c3-9a6cc8bb6e2a"
    }
  }, {
    "alias" : "certificates",
    "displayName" : "Certificates",
    "internalId" : "b3e9ba00-da39-446f-a533-c51bdc7cac0e",
    "providerId" : "keycloak-oidc",
    "enabled" : true,
    "updateProfileFirstLoginMode" : "on",
    "trustEmail" : false,
    "storeToken" : false,
    "addReadTokenRoleOnCreate" : false,
    "authenticateByDefault" : false,
    "linkOnly" : false,
    "firstBrokerLoginFlowAlias" : "Auto first broker login",
    "config" : {
      "userInfoUrl" : "http://localhost:8080/auth/realms/Certificates/protocol/openid-connect/userinfo",
      "validateSignature" : "true",
      "clientId" : "mcp-broker",
      "tokenUrl" : "http://localhost:8080/auth/realms/Certificates/protocol/openid-connect/token",
      "jwksUrl" : "http://localhost:8080/auth/realms/Certificates/protocol/openid-connect/certs",
      "issuer" : "http://localhost:8080/auth/realms/Certificates",
      "useJwksUrl" : "true",
      "authorizationUrl" : "http://localhost:8080/auth/realms/Certificates/protocol/openid-connect/auth",
      "clientAuthMethod" : "client_secret_post",
      "logoutUrl" : "http://localhost:8080/auth/realms/Certificates/protocol/openid-connect/logout",
      "syncMode" : "LEGACY",
      "clientSecret" : "**********"
    }
  } ],
  "identityProviderMappers" : [ {
    "id" : "33354734-4d8a-41be-a7c4-f469e8a05805",
    "name" : "mrn mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "mrn",
      "user.attribute" : "mrn"
    }
  }, {
    "id" : "ce8b609b-dd40-46fb-8583-772079ffcbd5",
    "name" : "subsidiary_mrn mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "subsidiary_mrn",
      "user.attribute" : "subsidiary_mrn"
    }
  }, {
    "id" : "1c19df4d-8e0f-44fb-98a8-9fd8db08b3d6",
    "name" : "username mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-username-idp-mapper",
    "config" : {
      "template" : "${CLAIM.mrn}"
    }
  }, {
    "id" : "46567169-5ada-4a1b-b48c-8e02c10ce9a4",
    "name" : "url mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "url",
      "user.attribute" : "url"
    }
  }, {
    "id" : "bf9c1151-1bca-4899-9803-1bc7419b76fc",
    "name" : "org mapper",
    "identityProviderAlias" : "Certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "org",
      "user.attribute" : "org"
    }
  }, {
    "id" : "57b19ae0-c65b-4726-92e6-f477f84caf63",
    "name" : "registered_port mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "registered_port",
      "user.attribute" : "registered_port"
    }
  }, {
    "id" : "49546a5b-96b2-4403-b907-26558a25189c",
    "name" : "org mapper",
    "identityProviderAlias" : "dma",
    "identityProviderMapper" : "hardcoded-attribute-idp-mapper",
    "config" : {
      "attribute.value" : "urn:mrn:mcl:org:dma",
      "attribute" : "org"
    }
  }, {
    "id" : "07620e9c-d193-433c-b8a9-5683b379da33",
    "name" : "username importer",
    "identityProviderAlias" : "Certificates",
    "identityProviderMapper" : "oidc-username-idp-mapper",
    "config" : {
      "template" : "${CLAIM.mrn}"
    }
  }, {
    "id" : "6272f979-0e5c-4b8d-93c4-2f2d6ccffdee",
    "name" : "mrn mapper",
    "identityProviderAlias" : "Certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "mrn",
      "user.attribute" : "mrn"
    }
  }, {
    "id" : "58020fc1-d43a-40f9-8685-c96dd808f6f9",
    "name" : "username mapper",
    "identityProviderAlias" : "dma",
    "identityProviderMapper" : "oidc-username-idp-mapper",
    "config" : {
      "template" : "urn:mrn:mcl:user:${ALIAS}:${CLAIM.preferred_username}"
    }
  }, {
    "id" : "c731d7c9-e222-4691-ba2b-4681e0e5af7e",
    "name" : "callsign mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "callsign",
      "user.attribute" : "callsign"
    }
  }, {
    "id" : "21f0c628-219c-49e7-a9df-e2ab30c5b17a",
    "name" : "ais_type mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "ais_type",
      "user.attribute" : "ais_type"
    }
  }, {
    "id" : "b327dc25-25c3-4764-8d03-4f657863252b",
    "name" : "mrn mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "mrn",
      "user.attribute" : "mrn"
    }
  }, {
    "id" : "b1efdcb7-8950-4491-a670-da3ae94e1452",
    "name" : "mmsi_number mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "mmsi_number",
      "user.attribute" : "mmsi_number"
    }
  }, {
    "id" : "7e77e7f3-9610-41f1-ac2e-904679109652",
    "name" : "ais_type mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "ais_type",
      "user.attribute" : "ais_type"
    }
  }, {
    "id" : "b00c2a01-088b-4213-b136-5d7bc45deba0",
    "name" : "permissions mapper",
    "identityProviderAlias" : "dma",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "permissions",
      "user.attribute" : "permissions"
    }
  }, {
    "id" : "03d37bcf-7994-4c28-af1f-9420785fc4d8",
    "name" : "flagstate mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "flagstate",
      "user.attribute" : "flagstate"
    }
  }, {
    "id" : "6c555fd6-4570-4444-b829-6dbe208affa4",
    "name" : "flagstate mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "flagstate",
      "user.attribute" : "flagstate"
    }
  }, {
    "id" : "19e9800e-043b-458b-8c9f-0238a3fc9708",
    "name" : "uid mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "uid",
      "user.attribute" : "uid"
    }
  }, {
    "id" : "b2a2f339-9e7a-49f8-9f99-bff7189bbcbf",
    "name" : "permissions mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "permissions",
      "user.attribute" : "permissions"
    }
  }, {
    "id" : "a2361ed2-f5d3-4600-9bbb-320ab5baf363",
    "name" : "callsign mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "callsign",
      "user.attribute" : "callsign"
    }
  }, {
    "id" : "b9c6bacf-3e47-4c58-bb61-d1ce801d76a7",
    "name" : "registered_port mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "registered_port",
      "user.attribute" : "registered_port"
    }
  }, {
    "id" : "6ff4ae1e-33ba-4cc1-84a8-8102738fc602",
    "name" : "permissions mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "permissions",
      "user.attribute" : "permissions"
    }
  }, {
    "id" : "745cb511-df4f-4cd4-99a2-5762df8071f4",
    "name" : "username mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-username-idp-mapper",
    "config" : {
      "template" : "${CLAIM.mrn}",
      "syncMode" : "INHERIT"
    }
  }, {
    "id" : "5ce75ed9-76f7-41d5-8113-5a15e1b7fcc9",
    "name" : "permissions mapper",
    "identityProviderAlias" : "Certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "permissions",
      "user.attribute" : "permissions"
    }
  }, {
    "id" : "960fed0c-013a-435a-8bee-b009c20cb40a",
    "name" : "imo_number mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "imo_number",
      "user.attribute" : "imo_number"
    }
  }, {
    "id" : "4475a834-8ca3-4ea0-b53b-86c22c71c8a5",
    "name" : "ship_mrn mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "ship_mrn",
      "user.attribute" : "ship_mrn"
    }
  }, {
    "id" : "58cad48b-a419-4b69-acb8-b40f9b9a983d",
    "name" : "mmsi mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "mmsi",
      "user.attribute" : "mmsi"
    }
  }, {
    "id" : "90877fc8-2e0e-4d8a-842d-d957969a7e77",
    "name" : "uid mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "uid",
      "user.attribute" : "uid"
    }
  }, {
    "id" : "edf094aa-d359-4ba5-9c01-d3d7c63679b6",
    "name" : "org mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "claim" : "org",
      "user.attribute" : "org"
    }
  }, {
    "id" : "258fd3f0-7427-4b87-8f9b-7cc60b43afee",
    "name" : "subsidiary_mrn mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "subsidiary_mrn",
      "user.attribute" : "subsidiary_mrn"
    }
  }, {
    "id" : "6d64a1da-ecbe-4910-b82e-34f7f49f9722",
    "name" : "ship_mrn mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "ship_mrn",
      "user.attribute" : "ship_mrn"
    }
  }, {
    "id" : "ab40010a-caee-44fc-9511-689f524ddb60",
    "name" : "imo_number mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "imo_number",
      "user.attribute" : "imo_number"
    }
  }, {
    "id" : "090c966b-7e57-4f81-9e25-e15fae0bbe55",
    "name" : "mmsi mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "mmsi",
      "user.attribute" : "mmsi"
    }
  }, {
    "id" : "87a4ed60-1887-47df-ab53-829a9c46aea9",
    "name" : "mms_url mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "mms_url",
      "user.attribute" : "mms_url"
    }
  }, {
    "id" : "399c2b30-ff10-46b6-b133-239675706247",
    "name" : "org mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "org",
      "user.attribute" : "org"
    }
  }, {
    "id" : "722d7add-bdca-4b5e-aad6-2a6f4e83ecf3",
    "name" : "url mapper",
    "identityProviderAlias" : "Users",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "LEGACY",
      "claim" : "url",
      "user.attribute" : "url"
    }
  }, {
    "id" : "6deb9c8f-6ef8-4135-b173-40348bd93228",
    "name" : "mms_url mapper",
    "identityProviderAlias" : "certificates",
    "identityProviderMapper" : "oidc-user-attribute-idp-mapper",
    "config" : {
      "syncMode" : "INHERIT",
      "claim" : "mms_url",
      "user.attribute" : "mms_url"
    }
  } ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "bd0918a0-12f1-4823-9938-56aab94bc735",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "ec4a4b55-c57f-4522-a781-8101f0d9e109",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "6fabadd6-f89b-47b4-8d85-b63e09c1ec7d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "6bd42090-cb6c-4164-b32b-ccf3dbb34366",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e27070f7-34f5-4fc7-9fc5-c74da189b2b6",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "f1a06461-8eae-424c-9175-c6322b877a8a",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "f96391b6-8669-4186-821e-51ae996ced02",
      "name" : "Allowed Client Templates",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "fcd27c48-0479-4aaf-970d-1b72bee95c9a",
      "name" : "Allowed Client Templates",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "60fe7bdc-1e95-442d-be43-2a1177d27c16",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAqMjoGcHuBuP2YrHEWzrlEDOC0L/Ji7mhlo46+btW5bi7+5KKa/jWsbW+Vj3eDhDE2Pjv6hRQyNVhC9WWd0VXmg+oSovLe1oWEtmb0jEZRbTZhFbMWwhGCjgCfnmSjBiWkaIK5CwIFUeBZPd26YZxZ7ejlCpZ0zYYHEfWMGGk12nSN0ma8i2fIlXPti+T5jtHQ03oSEgL8doJYGM+JCluZzZvZgzH1vo2/PQjzDbJSJT/OJIlcVYJB4qtbhxTmaQ95OiPR0OnHYMbQH/aEMwfrj368qrPiKrgjRy73H236XpLvwyyyK9GL//PxeX4AmR9vDbLfEgZyu1c+bV8+/6zaQIDAQABAoIBABmr9SF1za5enesE/sihfJWqQAtgIFeQNHOhznaNd/oYzv7Emykw//annfugDVY2VrppopQH4wGo8snKAsjBU0Grf/1WpextF05mqrydmypvB2aJjSuLZpvHSRnTg+arFruv2dg6mkAiUBv7R6rdOAJ+e/LdPixR3fjvNDTHpTreLYIZZFdKpoFl+c2fVg5wLdEOEGP0EtTTrppaZ/mkCk1nROCzggmnQyv8abp3vVAoU+58X+ZPZ7Ge/vaCFE0dP/BlXz/ArvXBeL6ZIDhQvGzRNUjEM0wZn5A86NNnTBV0iXj0DjDa7a31BG+odACCsP0qdRQ21p60LEBHoyfcCwECgYEA87d1Uh4UPvMuM4+HF24wIQunnSjCGfsA43IX7VOXuupfRF3K01CSUSXULRV3DFyNWJAlz6r4H4geQhTvSAjHGBZ9gJDy9uNWHTRmYDAQ6KSAdUddUbHRDbtNLXvZiNPHlCJ+sscKjyURyNcR07Zs+NAi99+j4dw6L4Tq/WH5EfUCgYEAsUqk3Sa4C6Mfg9CKzkxTkQYI4DvC/0u9h14+G0q2lQr6CYsfx2W0aNa5f8hhcEn8ClXSSI6AEb219UY/Qjz/VEzX9YPGPj0Kg5fDNtyY/MA/UToOuQDX4Vv4AQPFey/7ENgzak6pRdAZhckauaO7E4NpPUBKXFyMRSzH8dlSzyUCgYBI4lFsmGA3nyPu+XpN8H7mMwUSQ9EgUecnHcS4DaqvlE2fNWllno/TQrvcK7IpeTgwBxO3sgp3644Y9wfEBBP+SSOJIk/2s2/aVgRTuawk1qUv7YKj3siFEcF327TnbWYfD93R+yJWQqC57k9/f+vA0QXUGQZ6khC4i0h3NCh3TQKBgARuXyx/2T3BN/ptbeq2EaigQ/yGwdrro7MMcfTwqxuSiKlQZtzu99Fe/IfrFDRgRQJlHrpdhWnsGe4lcVNQfvk2andiccQAdpDPbDuky9YVX//Bubh6AutJByvPUlI/4sCLBs3zZVuvVdP4MMjPBM/6CtlTEAi6726TLfQngGBZAoGAEOfqJ7vmdLY3QnAl1/Y3Xhk894fAPHpKycvGmiFcYOIU81HlLMtPS9Z/uNu+Ju24FoEfcXAttQA/B3yytEI6gGW8fTNW+Jk/RDmJ8MnhvT3sOQbsfXj29FRk4hS2r5S558J5txOwBiAa+OitegrFagu7snXLgbTwYeJ3Ed93pf4=" ],
        "keySize" : [ "2048" ],
        "certificate" : [ "MIIClTCCAX0CBgFyPG0MvjANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANNQ1AwHhcNMjAwNTIyMTI0NjE5WhcNMzAwNTIyMTI0NzU5WjAOMQwwCgYDVQQDDANNQ1AwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoyOgZwe4G4/ZiscRbOuUQM4LQv8mLuaGWjjr5u1bluLv7kopr+Naxtb5WPd4OEMTY+O/qFFDI1WEL1ZZ3RVeaD6hKi8t7WhYS2ZvSMRlFtNmEVsxbCEYKOAJ+eZKMGJaRogrkLAgVR4Fk93bphnFnt6OUKlnTNhgcR9YwYaTXadI3SZryLZ8iVc+2L5PmO0dDTehISAvx2glgYz4kKW5nNm9mDMfW+jb89CPMNslIlP84kiVxVgkHiq1uHFOZpD3k6I9HQ6cdgxtAf9oQzB+uPfryqs+IquCNHLvcfbfpeku/DLLIr0Yv/8/F5fgCZH28Nst8SBnK7Vz5tXz7/rNpAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGa0/5/5amMn9AkPLvadobPmaWaWj7Onx//OUffF41AhRCGPW8A+97HPmnl/+QLsy2bLOmlOWO1zZfFG7oZc5FK1Gh951xHK+MyH3b1n09jSvmbAmdSbfNo6S3RIWRDXgIJjrLcYg6jZnEEQSoDMm6MOqs3d75ZermaJV250aJsUnVflnT7HWTnQSLlCUvAydE0cct8YX1+PYyxXD9K8WmQoM38XRPngZGOJu/Aag8Zwk5G2McRoMguxLDmfwzPqLKH0HcpaJPFQQSmet8J9Z9BkdnnOIz68SyvPvAV09XXm3SA8jnPcmnqaxeYQ8ipMkbxPJ5n8tF8HkPKBWbBVvD8=" ],
        "active" : [ "true" ],
        "priority" : [ "200" ],
        "enabled" : [ "true" ]
      }
    }, {
      "id" : "d2661830-2618-4547-8217-081998abde89",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "a5323532-448e-495f-9ba5-85a2c4b817f1" ],
        "secret" : [ "S3iCa_1xrbWS_gjQbDtB-g" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "eb4177ee-9536-4c1d-a2f1-b5bb48dc2269",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "354c29ab-bb3d-4ebb-9da7-7300436acd4f" ],
        "active" : [ "true" ],
        "secretSize" : [ "64" ],
        "secret" : [ "H1Hhz9zwh3lAPX82jOcxXi5a6OlcLoyW6ENEt3n9Ugmqb7s4zTSq4mxfbXI5BTfZOQXG1r2ctzzcH_PYWaqrIg" ],
        "priority" : [ "0" ],
        "enabled" : [ "true" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "f04d5f52-7886-485f-88d0-a9c60ce774b0",
    "alias" : "Auto first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "NoPromptAuthenticatorJS",
      "authenticator" : "auth-script-based",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 31,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e3c78e95-2985-432d-8d82-d864e79e482a",
    "alias" : "Auto first broker login Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Auto first broker login Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Auto first broker login Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "f704b63d-b290-4f5a-83a5-c51458f758ff",
    "alias" : "Auto first broker login Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ ]
  }, {
    "id" : "56e246b5-5678-4473-9a83-5a1ae012e8bf",
    "alias" : "Auto first broker login Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
    "description" : "Flow to determine if the auth-otp-form authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "8c748ff0-195f-4331-b2f6-7c05fef42527",
    "alias" : "Auto first broker login Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
    "description" : "Flow to determine if the auth-otp-form authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ ]
  }, {
    "id" : "737a8c96-aaaa-4f8f-a6f6-b8aac5f5177e",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account - Alternatives - 0",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "923acee0-1b4c-457f-b1d6-b6b4050b9f9d",
    "alias" : "Handle Existing Account - Alternatives - 0",
    "description" : "Subflow of Handle Existing Account with alternative executions",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "e1de6a91-195a-47b3-a009-40cd2055fdd1",
    "alias" : "Post login update",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "script-update-attr",
      "authenticator" : "auth-script-based",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e51b9448-dfb1-4609-acd8-36083ffdcbd0",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "7eb8a784-ce5a-4030-8de5-85d64612f11a",
    "alias" : "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
    "description" : "Flow to determine if the auth-otp-form authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "397f4622-add1-4c94-8d02-157dfa80b945",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "8b7edc6c-f44e-4f6e-b8c8-84a8cacaf31f",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "b3a5c3c0-e23f-427b-b491-3a4b603f5a1c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "direct grant - direct-grant-validate-otp - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "79d80a40-14c9-4327-98d3-7a5df8606227",
    "alias" : "direct grant - direct-grant-validate-otp - Conditional",
    "description" : "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e172d600-2e0b-4369-a17d-4fd1912d9d4b",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "a36cdf5a-b7a0-4899-9f6d-b431673766c7",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "first broker login - Alternatives - 0",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "fd535ae0-3298-4c1f-abc6-534da8d7b75a",
    "alias" : "first broker login - Alternatives - 0",
    "description" : "Subflow of first broker login with alternative executions",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6cdf8791-1c87-4819-8c46-fc5a9f3d7b6c",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "forms - auth-otp-form - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "93c4b6e9-b43e-442b-bb53-2c8bb3f5536d",
    "alias" : "forms - auth-otp-form - Conditional",
    "description" : "Flow to determine if the auth-otp-form authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "4acc4b48-38b7-4e3a-9863-8369f78a2694",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "98c3fd39-ce93-4eeb-9374-c43ef52a2625",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "28449a16-8d26-4be0-916a-75c880587c7f",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "reset credentials - reset-otp - Conditional",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "5cd81d3e-f553-4819-87eb-67de7a0a1fb8",
    "alias" : "reset credentials - reset-otp - Conditional",
    "description" : "Flow to determine if the reset-otp authenticator should be used or not.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "052adfca-c795-4e3c-85d9-7f0bd4202561",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "207e8739-6b9d-46bb-bd48-e312918bad15",
    "alias" : "NoPromptAuthenticatorJS",
    "config" : {
      "scriptDescription" : "Authenticator to make sure keycloak does not try to merge users. Instead, if a new user from a IDP clashes with an existing user from a different IDP, the existing user is deleted.",
      "scriptCode" : "// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\nSerializedBrokeredIdentityContext = Java.type(\"org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext\");\n\n\nfunction authenticate(context) {\n\n    LOG.info(\"Script Auth started!\");\n\n    LOG.info(\"Script Auth running 1\");\n\n    var authSession = context.getAuthenticationSession();\n    if (authSession.getClientNote(\"EXISTING_USER_INFO\") !== null) {\n        context.attempted();\n        return;\n    }\n    LOG.info(\"Script Auth running 2\");\n\n    var serializedCtx = SerializedBrokeredIdentityContext.readFromAuthenticationSession(authSession, \"BROKERED_CONTEXT\");\n    if (serializedCtx === null) {\n        LOG.info(\"serializedCtx is null\");\n        context.failure(AuthenticationFlowError.IDENTITY_PROVIDER_ERROR);\n        return;\n    }\n    LOG.info(\"Script Auth running 3\");\n    brokerContext = serializedCtx.deserialize(context.getSession(), authSession);\n    LOG.info(\"brokerCtx email: \" + brokerContext.getEmail() + \", brokerCtx username: \" + brokerContext.getModelUsername());    \n\n    //var /*String*/ username = getUsername(context, brokerContext);\n    // Normalize the username - an MRN created by simply appending the email to a predefined\n    // MRN prefix in a mapper. the unnormalized username probably looks like this:\n    // urn:mrn:mcl:user:dma:tgc@dma.dk\n    // It should end up like this:\n    // urn:mrn:mcl:user:dma:tgc\n    var mrn_split = brokerContext.getModelUsername().split(\":\");\n    var mrn_prefix = mrn_split.slice(0, mrn_split.length - 1).join(\":\");\n    var email = mrn_split[mrn_split.length - 1];\n    var username = mrn_prefix + \":\" + email.split(\"@\")[0];\n    if (username === null) {\n        LOG.info(realm.isRegistrationEmailAsUsername() ? \"Email\" : \"Username\");\n        authSession.setClientNote(\"ENFORCE_UPDATE_PROFILE\", \"true\");\n        context.resetFlow();\n        return;\n    }\n\n    LOG.info(script.name + \" --> trace auth for: \" + username);\n\n    LOG.info(\"Script Auth running 4\");\n\n    //LOG.info(\"user email: \" + user.email + \", user username: \" + user.username);\n    LOG.info(\"brokerCtx attributes: \" + serializedCtx.getAttributes());\n\n    // If the cert2oidc client is used, the certificate IDP must be used as well\n    var /*String*/ cert2oidcClientName = \"cert2oidc\";\n    var /*String*/ certificateIdpName = \"certificates\";\n    var /*String*/ idpName = brokerContext.getIdpConfig().getAlias();\n    var /*String*/ clientName = authSession.getClient().getClientId();\n    LOG.infof(\"Coming from client '%s', using IDP '%s'.\", clientName, idpName);\n    if (clientName.toLowerCase().equals(cert2oidcClientName) && !idpName.toLowerCase().equals(certificateIdpName)) {\n        context.failure(AuthenticationFlowError.INVALID_CLIENT_SESSION);\n        return;\n    }\n    var /*UserModel*/ existingUser = context.getSession().users().getUserByUsername(username, context.getRealm());\n    deleteDuplicateUserEmail(existingUser, context, brokerContext);\n\n    // TODO: Do some check to ensure that only the certificate IDP + one other IDP is linked to a user.\n\n    if (existingUser === null) {\n        LOG.info(\"No duplication detected. Creating account for user '\"+ username + \"' and linking with identity provider: \"+ brokerContext.getIdpConfig().getAlias());\n\n        var /*UserModel*/ brokeredUser = session.users().addUser(realm, username);\n        brokeredUser.setEnabled(true);\n        brokeredUser.setEmail(brokerContext.getEmail());\n        brokeredUser.setFirstName(brokerContext.getFirstName());\n        brokeredUser.setLastName(brokerContext.getLastName());\n\n        // Copy attributes to the new user\n        // Do funky stuff to make this hybrid java/javascript work\n        var StringArray = Java.type(\"java.lang.String[]\");\n        var a = new StringArray(2);\n        var keys = serializedCtx.getAttributes().keySet().toArray(a)\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            brokeredUser.setAttribute(key, serializedCtx.getAttribute(key));\n        }\n        context.setUser(brokeredUser);\n        authSession.setClientNote(\"BROKER_REGISTERED_NEW_USER\", \"true\");\n    } else {\n        LOG.info(\"Duplication detected. There is already existing user with username \" + existingUser.getUsername());\n\n        existingUser.setEmail(brokerContext.getEmail());\n        existingUser.setFirstName(brokerContext.getFirstName());\n        existingUser.setLastName(brokerContext.getLastName());\n        // Attribute updating is done in IdentityBrokerService\n        context.setUser(existingUser);\n    }\n\n    LOG.info(\"Auth success! :D\");\n    context.success();\n}\n\n\nfunction getUsername(/*AuthenticationFlowContext*/ context, /*BrokeredIdentityContext*/ brokerContext) {\n    // /*RealmModel*/ realm = context.getRealm();\n    return realm.isRegistrationEmailAsUsername() ? brokerContext.getEmail() : brokerContext.getModelUsername();\n}\n\nfunction deleteDuplicateUserEmail(/*UserModel*/ existingUser, /*AuthenticationFlowContext*/ context, /*BrokeredIdentityContext*/ brokerContext) {\n    var /*String*/ email = brokerContext.getEmail();\n    if (email !== null && !email.isEmpty()) {\n        var /*UserModel*/ userWithEmail = context.getSession().users().getUserByEmail(email, context.getRealm());\n        if (userWithEmail !== null) {\n            // Check if existingUser and the userWithEmail is the same\n            if (existingUser !== null && userWithEmail.getId().equals(existingUser.getId())) {\n                // All is good - continue to merge/link the users\n                LOG.info(\"existingUser and the userWithEmail is the same - continue to merge/link the users.\");\n                return;\n            } else {\n                // Found an existing user with the same email - delete it!\n                LOG.warn(\"Found an existing user with the same email - delete it!\");\n                context.getSession().users().removeUser(context.getRealm(), userWithEmail);\n            }\n        } else {\n            LOG.info(\"Did not find any conflicting users.\");\n        }\n    } else {\n        LOG.info(\"The user has no email - so no conflict...\");\n    }\n}"
    }
  }, {
    "id" : "f87eccca-b3c1-43f4-bb8e-a0d7c42b42d3",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "62a53ee0-39e9-4224-9f07-f4dde8dadf7c",
    "alias" : "idp-no-prompt-script",
    "config" : {
      "scriptCode" : "/*\n * Template for JavaScript based authenticator's.\n * See org.keycloak.authentication.authenticators.browser.ScriptBasedAuthenticatorFactory\n */\n\n// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\n\n/**\n * An example authenticate function.\n *\n * The following variables are available for convenience:\n * user - current user {@see org.keycloak.models.UserModel}\n * realm - current realm {@see org.keycloak.models.RealmModel}\n * session - current KeycloakSession {@see org.keycloak.models.KeycloakSession}\n * httpRequest - current HttpRequest {@see org.jboss.resteasy.spi.HttpRequest}\n * script - current script {@see org.keycloak.models.ScriptModel}\n * LOG - current logger {@see org.jboss.logging.Logger}\n *\n * You one can extract current http request headers via:\n * httpRequest.getHttpHeaders().getHeaderString(\"Forwarded\")\n *\n * @param context {@see org.keycloak.authentication.AuthenticationFlowContext}\n */\n\n\n\nfunction authenticate(context) {\n    context.failure(AuthenticationFlowError.INVALID_CLIENT_SESSION);\n    return;\n    //context.success();\n}\n\n\n"
    }
  }, {
    "id" : "31093b67-ff29-4730-ba20-b9704129f03d",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "off"
    }
  }, {
    "id" : "1e8d5fad-789a-4557-b4c0-ade98f86aa30",
    "alias" : "script-update-attr",
    "config" : {
      "scriptName" : "Script Auth Update Attributtes",
      "scriptCode" : "AuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\nSerializedBrokeredIdentityContext = Java.type(\"org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext\");\n\n\nfunction authenticate(context) {\n\n\n    user = context.getUser();\n    LOG.info(script.name + \" --> trace auth for: \" + user.username);\n\n    clientSession = context.getClientSession();\n    serializedCtx = SerializedBrokeredIdentityContext.readFromClientSession(clientSession, \"BROKERED_CONTEXT\");\n    if (serializedCtx == null) {\n        LOG.info(\"serializedCtx is null\");\n        context.failure(AuthenticationFlowError.IDENTITY_PROVIDER_ERROR);\n        return;\n    }\n    brokerContext = serializedCtx.deserialize(context.getSession(), clientSession);\n    LOG.info(\"brokerCtx email: \" + brokerContext.getEmail() + \", brokerCtx username: \" + brokerContext.getModelUsername());\n    LOG.info(\"user email: \" + user.email + \", user username: \" + user.username);\n\n    /*if (user.username === \"tester\" && user.getAttribute(\"someAttribute\") && user.getAttribute(\"someAttribute\").contains(\"someValue\")) {\n        context.failure(AuthenticationFlowError.INVALID_USER);\n        return;\n    }*/\n    context.success();\n}"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientSessionMaxLifespan" : "0",
    "parRequestUriLifespan" : "60",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "15.0.2",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}